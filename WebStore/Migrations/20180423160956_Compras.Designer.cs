// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebStore.Data;

namespace WebStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180423160956_Compras")]
    partial class Compras
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebStore.Data.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoriaNome");

                    b.Property<string>("Descricao");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("WebStore.Data.Models.Compra", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CEP");

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<DateTime>("DataCompra");

                    b.Property<string>("Email");

                    b.Property<string>("Endereco");

                    b.Property<string>("Estado");

                    b.Property<string>("PrimeiroNome");

                    b.Property<string>("Sobrenome");

                    b.Property<string>("Telefone");

                    b.Property<decimal>("TotalCompra");

                    b.HasKey("CompraId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("WebStore.Data.Models.DetalhesCompra", b =>
                {
                    b.Property<int>("DetalhesCompraId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompraId");

                    b.Property<decimal>("Preco");

                    b.Property<int>("Quantidade");

                    b.Property<int>("RoupaId");

                    b.HasKey("DetalhesCompraId");

                    b.HasIndex("CompraId");

                    b.HasIndex("RoupaId");

                    b.ToTable("DetalhesCompras");
                });

            modelBuilder.Entity("WebStore.Data.Models.ItemDoCarrinho", b =>
                {
                    b.Property<int>("ItemDoCarrinhoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CarrinhoDeComprasId");

                    b.Property<int>("Quantidade");

                    b.Property<int?>("RoupaId");

                    b.HasKey("ItemDoCarrinhoId");

                    b.HasIndex("RoupaId");

                    b.ToTable("ItensDoCarrinho");
                });

            modelBuilder.Entity("WebStore.Data.Models.Roupa", b =>
                {
                    b.Property<int>("RoupaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoriaId");

                    b.Property<string>("DescricaoLonga");

                    b.Property<string>("DescricaoPequena");

                    b.Property<string>("ImagemThumbnailUrl");

                    b.Property<string>("ImagemUrl");

                    b.Property<bool>("InStock");

                    b.Property<string>("Name");

                    b.Property<decimal>("Preco");

                    b.Property<bool>("RoupaPrefirada");

                    b.HasKey("RoupaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Roupas");
                });

            modelBuilder.Entity("WebStore.Data.Models.DetalhesCompra", b =>
                {
                    b.HasOne("WebStore.Data.Models.Compra", "Compra")
                        .WithMany("Compras")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebStore.Data.Models.Roupa", "Roupa")
                        .WithMany()
                        .HasForeignKey("RoupaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebStore.Data.Models.ItemDoCarrinho", b =>
                {
                    b.HasOne("WebStore.Data.Models.Roupa", "Roupa")
                        .WithMany()
                        .HasForeignKey("RoupaId");
                });

            modelBuilder.Entity("WebStore.Data.Models.Roupa", b =>
                {
                    b.HasOne("WebStore.Data.Models.Categoria", "Categoria")
                        .WithMany("Roupas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
